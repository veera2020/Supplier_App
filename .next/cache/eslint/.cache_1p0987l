[{"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\api\\hello.js":"1","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Buttons.js":"2","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\FormikErrorMessage.js":"3","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Forms.js":"4","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\InputFields.js":"5","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Myselect.js":"6","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Pagination.js":"7","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\home\\index.js":"8","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\index.js":"9","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Header.js":"10","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Layout.js":"11","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Navbar.js":"12","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\login\\LoginValidation.js":"13","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageorders\\AddRequirement.js":"14","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageorders\\index.js":"15","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\managesupplierBuyer\\index.js":"16","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\AddUser.js":"17","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\EditUser.js":"18","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\index.js":"19","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\view\\index.js":"20","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\_app.js":"21"},{"size":184,"mtime":1655291921806,"results":"22","hashOfConfig":"23"},{"size":352,"mtime":1655284915723,"results":"24","hashOfConfig":"23"},{"size":322,"mtime":1655284915726,"results":"25","hashOfConfig":"23"},{"size":287,"mtime":1655284915729,"results":"26","hashOfConfig":"23"},{"size":332,"mtime":1655284915731,"results":"27","hashOfConfig":"23"},{"size":1057,"mtime":1655284915734,"results":"28","hashOfConfig":"23"},{"size":2900,"mtime":1655284915735,"results":"29","hashOfConfig":"23"},{"size":2074,"mtime":1655284915739,"results":"30","hashOfConfig":"23"},{"size":828,"mtime":1655284915741,"results":"31","hashOfConfig":"23"},{"size":981,"mtime":1655294781716,"results":"32","hashOfConfig":"23"},{"size":874,"mtime":1655284915706,"results":"33","hashOfConfig":"23"},{"size":3255,"mtime":1655285337320,"results":"34","hashOfConfig":"23"},{"size":5425,"mtime":1655284915744,"results":"35","hashOfConfig":"23"},{"size":28924,"mtime":1655284915750,"results":"36","hashOfConfig":"23"},{"size":11341,"mtime":1655295900288,"results":"37","hashOfConfig":"23"},{"size":10021,"mtime":1655291307216,"results":"38","hashOfConfig":"23"},{"size":25046,"mtime":1655284915761,"results":"39","hashOfConfig":"23"},{"size":25839,"mtime":1655284915763,"results":"40","hashOfConfig":"23"},{"size":12838,"mtime":1655284915765,"results":"41","hashOfConfig":"23"},{"size":7012,"mtime":1655284915768,"results":"42","hashOfConfig":"23"},{"size":515,"mtime":1655284915714,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w61pvx",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\api\\hello.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Buttons.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\FormikErrorMessage.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Forms.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\InputFields.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Myselect.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\controls\\Pagination.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\home\\index.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\index.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Header.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Layout.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\Layout\\Navbar.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\login\\LoginValidation.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageorders\\AddRequirement.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageorders\\index.js",["110"],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\managesupplierBuyer\\index.js",["111"],[],"/*\r\n *  Document    : Supplier.js\r\n *  Author      : uyarchi\r\n *  Description : Manage Supplier and Buyer\r\n */\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  ButtonGroup,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"@chakra-ui/react\";\r\n//components\r\nimport axios from \"../../axios\";\r\n//useTable\r\nconst useTable = () => {\r\n  const [Loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showLimit, setShowLimit] = useState(10);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [rowData, setRowData] = useState(null);\r\n  return {\r\n    currentPage,\r\n    showLimit,\r\n    Loading,\r\n    gridApi,\r\n    rowData,\r\n    setCurrentPage,\r\n    setLoading,\r\n    setShowLimit,\r\n    setGridApi,\r\n    setRowData,\r\n  };\r\n};\r\n// Status\r\nconst Status = [\r\n  { value: \"pending\", label: \"Pending\" },\r\n  { value: \"moderated\", label: \"Moderated\" },\r\n  { value: \"rejected\", label: \"Rejected\" },\r\n];\r\n\r\n//function init\r\nconst Supplier = () => {\r\n  //router\r\n  const router = useRouter();\r\n  //usestate\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(false);\r\n  const [reload, setreload] = useState(false);\r\n\r\n  //table\r\n  const EmployeeTable = useTable();\r\n  //get employees\r\n  const [id, setId] = useState(\"\");\r\n  const fetchdata = async (page = 1) => {\r\n    EmployeeTable.setLoading(true);\r\n    const response = await axios.get(\"/v1/postorder\");\r\n    if (response.status === 200 && response.data) {\r\n      EmployeeTable.setRowData(response.data);\r\n    } else {\r\n      EmployeeTable.setRowData([]);\r\n    }\r\n  };\r\n  // Search Method\r\n  const handlesearch = () => {\r\n    fetchdata();\r\n  };\r\n  //useEffect\r\n  useEffect(() => {\r\n    fetchdata(EmployeeTable.currentPage, EmployeeTable.showLimit);\r\n  }, [reload, EmployeeTable.currentPage, EmployeeTable.showLimit]);\r\n\r\n  //modal for order details\r\n  //usestate\r\n  const [ismoderated, setIsModerated] = useState(false);\r\n  //const [shop, setshop] = useState(\"\");\r\n  const isModeratedClose = () => {\r\n    setIsModerated(false);\r\n  };\r\n  const statusModerate = () => {\r\n    setIsModerated(true);\r\n    //axios.get(`/v1/supplierBuyer/${props}`).then((res) => setshop(res.data));\r\n  };\r\n  //usestate\r\n  const [isrejected, setIsRejected] = useState(false);\r\n  //const [shop, setshop] = useState(\"\");\r\n  const isRejectedClose = () => {\r\n    setIsRejected(false);\r\n  };\r\n  const statusRejected = () => {\r\n    setIsRejected(true);\r\n    //axios.get(`/v1/supplierBuyer/${props}`).then((res) => setshop(res.data));\r\n  };\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Supplier/Buyer App - Manage Supplier</title>\r\n        <meta name=\"description\" content=\"Generated by create next app\" />\r\n      </Head>\r\n      <div className=\"p-4 \">\r\n        <div className=\"w-full pb-4\">\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              Moderate Customers (Supplier and Buyer)\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n        <hr className=\"p-1\"></hr>\r\n        <div className=\"flex items-center pb-4\">\r\n          <span className=\"flex-auto text-sky-500 text-xl\">\r\n            Moderate Customers (Supplier and Buyer)\r\n          </span>\r\n          <div className=\"flex items-center gap-3\">\r\n            <Button colorScheme=\"blue\" onClick={() => router.back()}>\r\n              Back\r\n            </Button>\r\n            <Button colorScheme=\"blue\" onClick={() => router.reload()}>\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr className=\"p-1\"></hr>\r\n        <div className=\"flex items-center gap-3 pb-4\">\r\n          <div className=\"flex-auto font-semibold text-primary\"></div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <label className=\"font-semibold\">Search By :</label>\r\n            <select\r\n              placeholder=\"Select\"\r\n              style={{ outline: 0 }}\r\n              className=\"border border-graycolor w-36 focus-outline-none bg-whitecolor experience\"\r\n              // onChange={(e) => {\r\n              //   setUserId(e.target.value);\r\n              //   e.target.classList.add(\"change_color\");\r\n              //   getpzone(e.target.value);\r\n              // }}\r\n            >\r\n              <option value=\"null\">Select Date</option>\r\n              {Status &&\r\n                Status.map((item, index) => (\r\n                  <option key={index} value={item.value}>\r\n                    {item.label}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n            <select\r\n              onChange={(e) => {\r\n                setStatus(e.target.value);\r\n                e.target.classList.add(\"change_color\");\r\n              }}\r\n              style={{ outline: 0 }}\r\n              className=\"border border-graycolor w-36 focus-outline-none bg-whitecolor experience\"\r\n              required\r\n            >\r\n              <option value=\"null\">Select Status</option>\r\n              {Status &&\r\n                Status.map((item, index) => (\r\n                  <option key={index} value={item.value}>\r\n                    {item.label}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex text-center pr-2 gap-2\">\r\n            <Button colorScheme=\"blue\" onClick={handlesearch}>\r\n              Go\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"border-gray-500 scroll-smooth border\">\r\n          <Table\r\n            size=\"sm\"\r\n            scaleY=\"44\"\r\n            variant=\"striped\"\r\n            colorScheme=\"whatsapp\"\r\n            className=\"overflow-auto\"\r\n          >\r\n            <Thead className=\"bg-headergreen\">\r\n              <Tr>\r\n                <Th>S.No</Th>\r\n                <Th>Date</Th>\r\n                <Th>Type</Th>\r\n                <Th>name</Th>\r\n                <Th>Product</Th>\r\n                <Th>Old Price</Th>\r\n                <Th>Moderated Price</Th>\r\n                <Th>Status</Th>\r\n                <Th>Action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {/* <Tr>\r\n                <Td>01</Td>\r\n                <Td>14-06-2022</Td>\r\n                <Td>Supplier</Td>\r\n                <Td>Crazy</Td>\r\n                <Td>Tomato</Td>\r\n                <Td>100</Td>\r\n                <Td>Nill</Td>\r\n                <Td>Pending</Td>\r\n                <Td>\r\n                  <ButtonGroup spacing=\"1\">\r\n                    <Button\r\n                      size=\"xs\"\r\n                      colorScheme=\"blue\"\r\n                      onClick={() => {statusModerate();setName(\"sup\");}}\r\n                    >\r\n                      Moderated\r\n                    </Button>\r\n                    <Button\r\n                      size=\"xs\"\r\n                      colorScheme=\"red\"\r\n                      onClick={() => statusRejected()}\r\n                      // onClick={() => {\r\n                      //   setIsRejectOpen(true);\r\n                      //   setRejectedId(item._id);\r\n                      // }}\r\n                    >\r\n                      Rejected\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Td>\r\n              </Tr> */}\r\n              {EmployeeTable.rowData != \"\" ? null : (\r\n                <Tr className=\"flex justify-center text-center px-2 \">\r\n                  No Data Found\r\n                </Tr>\r\n              )}\r\n              {EmployeeTable.rowData &&\r\n                EmployeeTable.rowData.map((item, index) => (\r\n                  <Tr key={index}>\r\n                    <Td>{index + 1}</Td>\r\n                    <Td>{item.date}</Td>\r\n                    <Td>{item.type}</Td>\r\n                    <Td>{item.name}</Td>\r\n                    <Td>{item.buyerpname}</Td>\r\n                    <Td>{item.expprice}</Td>\r\n                    <Td>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        colorScheme=\"blue\"\r\n                        variant=\"link\"\r\n                        onClick={() => isopenshop(item._id)}\r\n                      >\r\n                        {item.primaryContactName}\r\n                      </Button>\r\n                    </Td>\r\n                    <Td>{item.primaryContactNumber}</Td>\r\n                  </Tr>\r\n                ))}\r\n            </Tbody>\r\n          </Table>\r\n        </div>\r\n        <Modal isOpen={ismoderated} onClose={isModeratedClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Alert</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <div>Are you sure, Do you want to MODERATE Craze ?</div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={isModeratedClose} colorScheme=\"blue\" mr={3}>\r\n                Yes\r\n              </Button>\r\n              <Button onClick={isModeratedClose} colorScheme=\"red\" mr={3}>\r\n                No\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n        <Modal isOpen={isrejected} onClose={isRejectedClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Alert</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <div>Are you sure, Do you want to REJECT Craze ?</div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={isRejectedClose} colorScheme=\"blue\" mr={3}>\r\n                Yes\r\n              </Button>\r\n              <Button onClick={isRejectedClose} colorScheme=\"red\" mr={3}>\r\n                No\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Supplier;\r\n","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\AddUser.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\EditUser.js",[],[],"C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\index.js",["112"],[],"/*\r\n *  Document    : Users.js\r\n *  Author      : uyarchi\r\n *  Description : User details\r\n */\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  RadioGroup,\r\n  Stack,\r\n  Radio,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  ButtonGroup,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from \"@chakra-ui/react\";\r\n//components\r\nimport Pagination from \"../controls/Pagination\";\r\nimport axios from \"../../axios\";\r\nimport AddUser from \"./AddUser\";\r\nimport EditUser from \"./EditUser\";\r\n//useTable\r\nconst useTable = () => {\r\n  const [Loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showLimit, setShowLimit] = useState(10);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [rowData, setRowData] = useState(null);\r\n  return {\r\n    currentPage,\r\n    showLimit,\r\n    Loading,\r\n    gridApi,\r\n    rowData,\r\n    setCurrentPage,\r\n    setLoading,\r\n    setShowLimit,\r\n    setGridApi,\r\n    setRowData,\r\n  };\r\n};\r\nconst Status = [\r\n  { value: \"Allocated\", label: \"Allocated\" },\r\n  { value: \"UnAllocated\", label: \"UnAllocated\" },\r\n  { value: \"Disabled\", label: \"Disabled\" },\r\n];\r\n//function init\r\nconst Users = () => {\r\n  //router\r\n  const router = useRouter();\r\n  //usestate\r\n  const [userId, setUserId] = useState(\"null\");\r\n  const [district, setdistrict] = useState(\"\");\r\n  const [districtId, setDistrictId] = useState(\"null\");\r\n  const [zone, setzone] = useState(\"\");\r\n  const [zoneId, setZoneId] = useState(\"null\");\r\n  const [ward, setward] = useState(\"\");\r\n  const [wardId, setWardId] = useState(\"null\");\r\n  const [empID, setEmpID] = useState(\"\");\r\n  const [reload, setreload] = useState(false);\r\n  const [totalEmp, settotalEmp] = useState(\"\");\r\n  const [pDistrict, setPDistrict] = useState(\"\");\r\n  const [pZone, setPZone] = useState(\"\");\r\n  const [pWard, setPWard] = useState(\"\");\r\n  const [pWardid, setPWardid] = useState(\"\");\r\n  const [user, setuser] = useState(\"\");\r\n  const [name, setname] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/v1/district\")\r\n  //     .then((res) => {\r\n  //       setdistrict(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.error(err);\r\n  //     });\r\n  //   axios\r\n  //     .get(\"/v1/manageUser/manageUserAllData/all\")\r\n  //     .then((res) => {\r\n  //       setuser(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.error(err);\r\n  //     });\r\n  // }, []);\r\n  //getzone\r\n  function getzone(props) {\r\n    axios\r\n      .get(`/v1/zone/zoneByDistrict/${props.target.value}`)\r\n      .then((resp) => {\r\n        setzone(resp.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  //getward\r\n  function getward(props) {\r\n    axios\r\n      .get(`/v1/ward/wardByZone/${props.target.value}`)\r\n      .then((resp) => {\r\n        setward(resp.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  //get prefered zone\r\n  const getpzone = (props) => {\r\n    axios\r\n      .get(`/v1/manageUser/${userId}`)\r\n      .then((res) => {\r\n        setPDistrict(res.data[0].preferredDistrict);\r\n        setPZone(res.data[0].preferredZone);\r\n        setPWard(res.data[0].preferredWard);\r\n        setPWardid(res.data[0].preferredWardId);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //table\r\n  const EmployeeTable = useTable();\r\n  //get employees\r\n  const [id, setId] = useState(\"\");\r\n  const fetchdata = async (page = 1) => {\r\n    EmployeeTable.setLoading(true);\r\n    const response = await axios.get(\"/v1/supplierBuyer/allData\");\r\n    if (response.status === 200 && response.data) {\r\n      EmployeeTable.setRowData(response.data);\r\n      settotalEmp(response.data.count);\r\n    } else {\r\n      EmployeeTable.setRowData([]);\r\n    }\r\n  };\r\n  //useEffect\r\n  useEffect(() => {\r\n    fetchdata(EmployeeTable.currentPage, EmployeeTable.showLimit);\r\n  }, [reload, EmployeeTable.currentPage, EmployeeTable.showLimit]);\r\n\r\n  //deleteHandler\r\n  const [isdeleteOpen, setIsdeleteOpen] = useState(false);\r\n  const ondeleteClose = () => {\r\n    setIsdeleteOpen(false);\r\n  };\r\n  const cancelRef = useRef();\r\n  const DeleteHandler = async () => {\r\n    ondeleteClose();\r\n    const isDeleted = await axios.delete(`/v1/supplierBuyer/${id}`);\r\n    if (isDeleted) {\r\n      EmployeeTable.setCurrentPage(1);\r\n      setreload(!reload);\r\n    }\r\n  };\r\n  //enablehandler\r\n  const [isenableOpen, setIsenableOpen] = useState(false);\r\n  const onenableClose = () => {\r\n    setIsenableOpen(false);\r\n  };\r\n  const enableRef = useRef();\r\n  const EnableHandler = async () => {\r\n    onenableClose();\r\n    const data = {\r\n      active: true,\r\n      archive: false,\r\n    };\r\n    const isDeleted = await axios.put(`/v1/supplierBuyer/${id}`, data);\r\n    if (isDeleted) {\r\n      EmployeeTable.setCurrentPage(1);\r\n      setreload(!reload);\r\n    }\r\n  };\r\n  //edit\r\n  //usestate\r\n  const [iseditopen, setIseditopen] = useState(false);\r\n  const iseditclose = () => {\r\n    setIseditopen(false);\r\n  };\r\n  const editFunction = (id) => {\r\n    setIseditopen(true);\r\n    setEmpID(id);\r\n  };\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Supplier/Buyer App - Manage Users</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className=\"p-4 \">\r\n        <div className=\"w-full pb-4\">\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Manage User</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n        <hr className=\"p-1\"></hr>\r\n        <div className=\"flex items-center pb-4\">\r\n          <span className=\"flex-auto text-sky-500 text-xl\">Manage Users</span>\r\n          <div className=\"flex items-center gap-3\">\r\n            <AddUser setreload={setreload} reload={reload} />\r\n            <Button colorScheme=\"blue\" onClick={() => router.reload()}>\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"border-gray-500 scroll-smooth border\">\r\n          <Table\r\n            size=\"sm\"\r\n            scaleY=\"44\"\r\n            variant=\"striped\"\r\n            colorScheme=\"whatsapp\"\r\n            className=\"overflow-auto\"\r\n          >\r\n            <Thead className=\"bg-headergreen\">\r\n              <Tr>\r\n                <Th>S.No</Th>\r\n                <Th>Type</Th>\r\n                <Th>Name</Th>\r\n                <Th>Mobile No</Th>\r\n                <Th>Actions</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {EmployeeTable.rowData != \"\" ? null : (\r\n                <Tr className=\"flex justify-center text-center px-2 \">\r\n                  No Data Found\r\n                </Tr>\r\n              )}\r\n              {EmployeeTable.rowData &&\r\n                EmployeeTable.rowData.map((item, index) => (\r\n                  <Tr key={index}>\r\n                    <Td>{index + 1}</Td>\r\n                    <Td>{item.type}</Td>\r\n                    <Td>{item.primaryContactName}</Td>\r\n                    <Td>{item.primaryContactNumber}</Td>\r\n                    <Td>\r\n                      {item.active === true ? (\r\n                        <ButtonGroup\r\n                          spacing=\"1\"\r\n                          onClick={() => setId(item._id)}\r\n                        >\r\n                          <Button\r\n                            size=\"xs\"\r\n                            colorScheme=\"blue\"\r\n                            onClick={() => {\r\n                              router.push(\r\n                                {\r\n                                  pathname: \"/manageusers/view\",\r\n                                  query: { id: item._id },\r\n                                },\r\n                                \"manageusers/view\"\r\n                              );\r\n                              Cookies.set(\"viewid\", item._id);\r\n                            }}\r\n                          >\r\n                            View\r\n                          </Button>\r\n                          <Button\r\n                            size=\"xs\"\r\n                            colorScheme=\"orange\"\r\n                            onClick={() => editFunction(item._id)}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            size=\"xs\"\r\n                            colorScheme=\"red\"\r\n                            onClick={() => setIsdeleteOpen(true)}\r\n                          >\r\n                            Disable\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      ) : (\r\n                        <ButtonGroup\r\n                          spacing=\"1\"\r\n                          onClick={() => {\r\n                            setId(item._id);\r\n                            localStorage.setItem(\"viewid\", item._id);\r\n                            console.log(item._id);\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            size=\"xs\"\r\n                            colorScheme=\"blue\"\r\n                            onClick={() => {\r\n                              router.push(\r\n                                {\r\n                                  pathname: \"/manageusers/view\",\r\n                                  query: { id: item._id },\r\n                                },\r\n                                \"manageusers/view\"\r\n                              );\r\n                              Cookies.set(\"viewid\", item._id);\r\n                            }}\r\n                          >\r\n                            View\r\n                          </Button>\r\n                          <Button\r\n                            size=\"xs\"\r\n                            colorScheme=\"red\"\r\n                            onClick={() => setIsenableOpen(true)}\r\n                          >\r\n                            Enable\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      )}\r\n                    </Td>\r\n                  </Tr>\r\n                ))}\r\n            </Tbody>\r\n          </Table>\r\n        </div>\r\n        {/* <Pagination\r\n          totalRecord={totalEmp ? totalEmp : 0}\r\n          rowLength={EmployeeTable.rowData ? totalEmp : 0}\r\n          {...EmployeeTable}\r\n        /> */}\r\n        {isdeleteOpen && (\r\n          <AlertDialog\r\n            isOpen={isdeleteOpen}\r\n            leastDestructiveRef={cancelRef}\r\n            onClose={ondeleteClose}\r\n          >\r\n            <AlertDialogOverlay>\r\n              <AlertDialogContent>\r\n                <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                  Disable User\r\n                </AlertDialogHeader>\r\n                <AlertDialogBody>\r\n                  Are you sure? You want to disable this user.\r\n                </AlertDialogBody>\r\n                <AlertDialogFooter>\r\n                  <Button ref={cancelRef} onClick={ondeleteClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button colorScheme=\"red\" onClick={DeleteHandler} ml={3}>\r\n                    Disable\r\n                  </Button>\r\n                </AlertDialogFooter>\r\n              </AlertDialogContent>\r\n            </AlertDialogOverlay>\r\n          </AlertDialog>\r\n        )}\r\n        {isenableOpen && (\r\n          <AlertDialog\r\n            isOpen={isenableOpen}\r\n            leastDestructiveRef={enableRef}\r\n            onClose={onenableClose}\r\n          >\r\n            <AlertDialogOverlay>\r\n              <AlertDialogContent>\r\n                <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                  Enable User\r\n                </AlertDialogHeader>\r\n                <AlertDialogBody>\r\n                  Are you sure? You want to enable this user.\r\n                </AlertDialogBody>\r\n                <AlertDialogFooter>\r\n                  <Button ref={enableRef} onClick={onenableClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button colorScheme=\"red\" onClick={EnableHandler} ml={3}>\r\n                    Enable\r\n                  </Button>\r\n                </AlertDialogFooter>\r\n              </AlertDialogContent>\r\n            </AlertDialogOverlay>\r\n          </AlertDialog>\r\n        )}\r\n        {iseditopen && (\r\n          <EditUser\r\n            iseditopen={iseditopen}\r\n            iseditclose={iseditclose}\r\n            empID={empID}\r\n            setreload={setreload}\r\n            reload={reload}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Users;\r\n","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\manageusers\\view\\index.js",["113"],[],"/*\r\n *  Document    : Home.js\r\n *  Author      : Uyarchi\r\n *  Description : View Single users\r\n */\r\nimport { useEffect, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport Cookies from \"js-cookie\";\r\n//components\r\nimport EditUser from \"../EditUser\";\r\nimport axios from \"../../../axios\";\r\n//function init\r\nconst Home = (props) => {\r\n  //useState\r\n  const [user, setuser] = useState(\"\");\r\n  const [reload, setreload] = useState(false);\r\n  //router\r\n  const router = useRouter();\r\n  let id = Cookies.get(\"viewid\");\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/v1/supplierBuyer/${id}`)\r\n      .then((res) => {    \r\n        setuser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n  //edit\r\n  //usestate\r\n  const [iseditopen, setIseditopen] = useState(false);\r\n  const [empID, setEmpID] = useState(\"\");\r\n  const iseditclose = () => {\r\n    setIseditopen(false);\r\n    setreload(!reload);\r\n    axios\r\n      .get(`/v1/supplierBuyer/${id}`)\r\n      .then((res) => {\r\n        setuser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  const editFunction = (props) => {\r\n    setIseditopen(true);\r\n    setEmpID(props);\r\n  };\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>supplier/Buyer - View Users</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className=\"p-4\">\r\n        <div className=\"w-full pb-4\">\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>View User</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n        <hr className=\"p-1\"></hr>\r\n        <div className=\"flex gap-2 items-center pb-4\">\r\n          <span className=\"flex-auto text-sky-500 text-xl\">View User</span>\r\n          <Button colorScheme=\"blue\" onClick={() => router.back()}>\r\n            Back\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            onClick={() => editFunction(router.query.id)}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button colorScheme=\"blue\" onClick={() => window.location.reload()}>\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n        <div className=\"border border-graycolor cursor-pointer\">\r\n          <div className=\"grid grid-cols-5 px-4 p-1\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Trade Name\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.tradeName}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Company Type\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.companytype}</div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Secondary Contact Name\r\n            </div>\r\n            {user.secondaryContactName === \"\" ? (\r\n              <div className=\"col-span-4 p-1\">null</div>\r\n            ) : (\r\n              <div className=\"col-span-4 p-1\">{user.secondaryContactName}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Secondary Contact No\r\n            </div>\r\n            {user.secondaryContactNumber === \"\" ? (\r\n              <div className=\"col-span-4 p-1\">null</div>\r\n            ) : (\r\n              <div className=\"col-span-4 p-1\">\r\n                {user.secondaryContactNumber}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Email\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.email}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              GST No\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.gstNo}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Address\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.RegisteredAddress}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Country\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.countries}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              State\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.state}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              District\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.district}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Pincode\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.pinCode}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Location\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.gpsLocat}</div>\r\n          </div>\r\n          <div className=\"grid grid-cols-5 px-4 border-t border-graycolor\">\r\n            <div className=\"col-span-1 text-blue-500 text-semibold border-r border-graycolor p-1\">\r\n              Products Dealing With\r\n            </div>\r\n            <div className=\"col-span-4 p-1\">{user.productDealingWith}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {iseditopen && (\r\n        <EditUser\r\n          iseditopen={iseditopen}\r\n          iseditclose={iseditclose}\r\n          empID={empID}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\SYSTEM 12\\Desktop\\Supplier_app\\pages\\_app.js",[],[],{"ruleId":"114","severity":1,"message":"115","line":81,"column":6,"nodeType":"116","endLine":81,"endColumn":66,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"115","line":85,"column":6,"nodeType":"116","endLine":85,"endColumn":66,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":154,"column":6,"nodeType":"116","endLine":154,"endColumn":66,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"120","line":34,"column":6,"nodeType":"116","endLine":34,"endColumn":8,"suggestions":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.","ArrayExpression",["122"],["123"],["124"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["125"],{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"126","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [reload, EmployeeTable.currentPage, EmployeeTable.showLimit, fetchdata]",{"range":"132","text":"133"},{"range":"134","text":"133"},{"range":"135","text":"133"},"Update the dependencies array to be: [id]",{"range":"136","text":"137"},[1908,1968],"[reload, EmployeeTable.currentPage, EmployeeTable.showLimit, fetchdata]",[2021,2081],[4179,4239],[870,872],"[id]"]